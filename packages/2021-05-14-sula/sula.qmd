---
title: "sula"
description: |
  Functions to clean your data and calculate the foraging trip parameters of the individuals. 
author:
  - name: Miriam Lerma
date: 2021-05-15
image: sula_front.png
format:
  html:
    toc: true
    toc-depth: 2
    toc-location: left
    css: styles.css
---


# Intro

Este paquete contiene:

-   **Datos** de tracks de kena (*Sula dactylatra*) colectados en Rapa Nui para replicar los ejemplos üóø
-   **Trece funciones** para limpiar y calcular par√°metros de viajes a partir de datos GPS Detailed information and uses: <https://github.com/MiriamLL/sula>

## Instalaci√≥n

Puedes instalar este paquete desde [GitHub](https://github.com/) usando:

```{r, eval=FALSE}
# install.packages("devtools")
devtools::install_github("MiriamLL/sula")
```

# Datos

Carga la librer√≠a

```{r libreria}
library(sula)
```

## Un individuo

Carga los datos de GPS de un individuo.

```{r cargar_uno, eval=FALSE}
head(GPS_01)
```

**Nota** Incluye columna con fecha y hora en formato POSIXct

## Notas de campo

Incluye el periodo cuando se coloc√≥ el dispositivo hasta cuando se retir√≥.

```{r, eval=FALSE}
Notas<-Notas
```

**Nota**: no corresponden al periodo real de muestreo. Se proveen estos datos para practicar las funciones.

# Funciones

## ajustar_hora

Esta funci√≥n corrige el tiempo de acuerdo a la zona horaria, se necesita especificar los datos GPS, el nombre de la columna que contiene datos de hora y d√≠a, el formato en el que est√°n √©stos datos, y el n√∫mero de horas de diferencia a corregir de acuerdo al GMT.

```{r, eval=FALSE}
GPS_gmt<-ajustar_hora(GPS_data = GPS_raw,
                      dia_col = 'DateGMT',
                      hora_col = 'TimeGMT',
                      formato="%d/%m/%Y %H:%M:%S",
                      dif_hor = 5)
```

Regresa el mismo data frame con dos columnas adicionales: **dia_hora** con el d√≠a y fecha original y **hora_corregida** con la hora correspondiente al GMT.

## recortar_periodo

Este funci√≥n permite recortar periodos dentro de los datos.

```{r, eval=FALSE}
GPS_recortado<-recortar_periodo(GPS_data=GPS_01,
                                inicio='02/11/2017 18:10:00',
                                final='05/11/2017 14:10:00',
                                dia_col='DateGMT',
                                hora_col='TimeGMT',
                                formato="%d/%m/%Y %H:%M:%S")
```

Nota: El formato de tiempo y hora debe ser el mismo formato que el formato de inicio y final.

## localizar_nido

Esta funci√≥n usa el primer valor de los datos de GPS como punto de la colonia, sirve para identificar la localizaci√≥n del nido por individuo. Regresa un nuevo data frame con dos columnas: Latitude y Longitude correspondientes a la localizaci√≥n del nido.

```{r, eval=FALSE}
nest_loc<-localizar_nido(GPS_data = GPS_01,
                          lat_col="Latitude",
                          lon_col="Longitude")
```

**Nota** Asume que los datos del nido corresponde al primer registro de GPS.

## identificar_viajesÔ∏è

Esta funci√≥n agrega una columna de acuerdo a distancia de la colonia para determinar si esta en un viaje de alimentaci√≥n o no.

```{r, echo=TRUE, eval=FALSE, warnings=FALSE}
GPS_trip<-identificar_viajes(GPS_data=GPS_01,
                        nest_loc=nest_loc,
                        distancia_km=1)
```

En la columna llamada trip:\
**N**=dentro de la distancia considerada como no viaje de alimentaci√≥n, y\
**Y**=viaje de alimentaci√≥n.

## contar_viajes

Esta funci√≥n agrega una columna con el n√∫mero del viaje y elimina locaciones dentro de el radio de la colonia.

```{r, echo=TRUE, eval=FALSE, warnings=FALSE}
GPS_edited<-contar_viajes(GPS_data=GPS_trip)
```

## dist_colonia

Agrega una columna con la distancia de la colonia de cada punto. Regresa el mismo data frame con una nueva columna llamada 'maxdist_km.

```{r, echo=TRUE, eval=FALSE, warnings=FALSE}
GPS_dist<-dist_colonia(GPS_edited = GPS_edited, 
                       nest_loc=nest_loc)
```

**Nota** usa CRS: 4326. Enlaces: [¬øreferencia geogr√°fica?](https://mgimond.github.io/Spatial/chp09-0.html), [¬øcual usar?](https://geocompr.robinlovelace.net/reproj-geo-data.html)

## dist_puntos

Agrega una columna con la distancia entre cada punto. Regresa el mismo data frame con una nueva columna llamada 'pointsdist_km'.

```{r, echo=TRUE, eval=FALSE, warnings=FALSE}
GPS_dist<-dist_puntos(GPS_data = GPS_edited,
                      separador='trip_number')
```

**Nota** usa CRS: 4326. Incluye NAs al inicio del viaje. Enlaces: [¬øreferencia geogr√°fica?](https://mgimond.github.io/Spatial/chp09-0.html), [¬øcual usar?](https://geocompr.robinlovelace.net/reproj-geo-data.html)

## calcular_duracion ‚è≥

Identifica el inicio y el final del viaje y calcula la duraci√≥n. Regresa un nuevo data frame con 4 columnas: trip_id, trip_start, trip_end y duration.

```{r, eval=FALSE}
duracion<-calcular_duracion(GPS_data = GPS_edited,
                            col_diahora = "tStamp",
                            formato = "%Y-%m-%d %H:%M:%S",
                            unidades="hours",
                            separador="trip_number")
```

**Nota** la duraci√≥n se calcula en valores n√∫mericos.

## calcular_totaldist

Calcula distancia recorrida de la colonia por viaje.\
Debe contener la columna Longitude y Latitude con estos nombres.\
Regresa un nuevo data frame con la distancia total recorrida por viaje.

```{r, eval=FALSE}
totaldist_km<-calcular_totaldist(GPS_data= GPS_edited,
                                 separador="trip_number")
```

## calcular_maxdist

Obtiene la distancia m√°xima de la colonia por viaje.\
Debe contener la columna Longitude y Latitude con estos nombres.\
Regresa un nuevo data frame con la distancia m√°xima de la colonia por viaje.

```{r, eval=FALSE}
maxdist_km<-calcular_maxdist(GPS_data = GPS_edited, 
                             nest_loc=nest_loc,
                             separador="trip_number")
```

## calcular_tripparams

Calcula la duraci√≥n de los viajes, la distancia m√°xima de la colonia y la distancia total recorrida. Regresa un nuevo data frame con los par√°metros por viaje.

```{r, eval=FALSE}
trip_params<-calcular_tripparams(GPS_data = GPS_edited,
                              diahora_col = "tStamp",
                              formato = "%Y-%m-%d %H:%M:%S",
                              nest_loc=nest_loc,
                              separador="trip_number")
```

# Citar

-   Lerma M (2021) Package sula. Zenodo. ttps://doi.org/10.5281/zenodo.4740920[![DOI](https://zenodo.org/badge/DOI/10.5281/zenodo.4740920.svg)](https://doi.org/10.5281/zenodo.4740920)

-   Los datos de prueba vienen de la publicaci√≥n: Lerma M, Dehnhard N, Luna-Jorquera G, Voigt CC, Garthe S (2020) Breeding stage, not sex, affects foraging characteristics in masked boobies at Rapa Nui. Behavioral ecology and sociobiology 74: 149. [üîì](https://link.springer.com/article/10.1007/s00265-020-02921-1)

