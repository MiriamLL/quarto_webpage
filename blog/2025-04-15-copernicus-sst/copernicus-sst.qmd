---
title: "Sea surface temperature"
description: |
  In this blog post, I walk you through the process of visualizing sea surface temperature in R. From downloading the dataset to reading it and creating a map using ggplot.
author:
  - name: Miriam Lerma
    url: {}
date: 2025-04-07
image: sst_front.jpg
format:
  html:
    toc: true
    toc-depth: 2
    toc-location: left
    css: styles.css
categories:
  - r
  - ggplot2
  - germansea
  - Y2025
---

# Intro

The Copernicus Marine Service (CMS), also known as the Copernicus Marine Environment Monitoring Service, is the marine component of the European Union's Copernicus Programme.\
It delivers free, regular, and systematic information on the state of the ocean, encompassing the Blue (physical), White (sea ice), and Green (biogeochemical) components, both globally and regionally.\
Funded by the European Commission (EC) and implemented by Mercator Ocean International, the service is designed to support EU policies and international legal commitments related to Ocean Governance. It also addresses the global need for ocean knowledge and fosters the Blue Economy across all maritime sectors by providing cutting-edge ocean data and information at no cost.

This post includes:\
- Download raster data\
- Read and subset raster data\
- Plot raster data

# Data

Raster data is available at: [Copernicus Marine Data Store](https://marine.copernicus.eu/about)

To access the [products](https://data.marine.copernicus.eu/products). You need to register to be able to download data

Sea surface temperature (SST) refers to the temperature of the uppermost layer of the ocean, typically measured at the surface of the sea.

For downloading the data: [follow this instructions.](https://help.marine.copernicus.eu/en/articles/4469993-how-to-download-copernicus-marine-products#h_ec9344c750)

-   For this exercise:\
    Download sea water potential temperaturethetao \[°C\]\
    Based on the coordinates 1 to 10 and 50 to 60\
    For the time frame of April and May 2018\
    From the depths 0 to 60 m

To download test data in nc format [click here](https://github.com/MiriamLL/data_supporting_webpage/raw/refs/heads/main/Blog/2025/SST/cmems_mod_glo_phy_my_0.083deg-climatology_P1M-m_1729785319560.nc).

## Read data

Select the directory where the information is stored, or as here, use the data directly form the repository.

```{r, eval=FALSE}
SST_nc<-"https://github.com/MiriamLL/data_supporting_webpage/raw/refs/heads/main/Blog/2025/SST/cmems_mod_glo_phy_my_0.083deg-climatology_P1M-m_1729785319560.nc"
```

Load the [terra package](https://pjbartlein.github.io/REarthSysSci/netcdf_terra.html) for reading raster data.

```{r, eval=FALSE}
library(terra)
```

The function **rast** helps to read raster data - replacing package raster.

```{r, eval=FALSE}
SST_file<-rast(SST_nc)
```

## Subset raster data

Change to data frame for data wrangling.

```{r, eval=FALSE}
SST_dataframe <- as.data.frame(SST_file, xy = TRUE)
```

Load the package **tidyverse**.

```{r, eval=FALSE}
library(tidyverse)
```

Use **filter** to subset the data to a specific geographical area.

```{r, eval=FALSE}
SST_sub <-SST_dataframe  %>%
  filter(x > 2 & x < 10)%>%
  filter(y > 52 & y < 57)
```

**Obtain mean values per latitude and longitude**

There are many columns with data per depth, as data was collected almost every meter.

```{r, eval=FALSE}
ncol(SST_sub)
```

To keep columns with the depth area use the functions **select** and **starts_with**.

```{r, eval=FALSE}
SST_depth<-SST_sub %>%
  select(starts_with("thetao"))
```

Check the depths were the data was collected.

```{r, eval=FALSE}
Depths<-colnames(SST_depth)
head(Depths)
```

Using functions from tidyverse such as **rowwise**, summarise the information per depth.

```{r, eval=FALSE}
SST_depth_perloc<-SST_depth %>%
  rowwise()%>%
  mutate(mean_SST = mean(c_across(where(is.numeric)),na.rm=TRUE),
         min_SST = min(c_across(where(is.numeric)),na.rm=TRUE),
         max_SST = max(c_across(where(is.numeric))),na.rm=TRUE)%>%
  relocate(mean_SST,min_SST,max_SST)
```

The function **arrange** from the package tidyverse allows to see the columns of interest first.

```{r, eval=FALSE}
first_column<-SST_depth[1,]
long_values<-first_column %>% 
  pivot_longer(
    cols = 1:228, 
    names_to = "type",
    values_to = "value"
)
arrange_values<-arrange(long_values, desc(value))
```

```{r KnitTableSightings, echo=FALSE, eval=FALSE}
knitr::kable(head(arrange_values))
```

Now there is a value per latitude and longitude of the sea surface temperature, summarizing the first 60 m of the water column.

```{r, eval=FALSE}
SST_sub$SST<-SST_depth_perloc$mean_SST
```

```{r, eval=FALSE}
mean(SST_sub$SST)
```

# Plot

Load the package **ggplot2**

```{r, eval=FALSE}
library(ggplot2)
```

Plot your data using **geom_raster**

```{r, fig.width=6, eval=FALSE}
ggplot() +
  geom_raster(data = SST_sub , aes(x = x, y = y, fill = SST)) +
  theme_void()+
  theme(legend.position='bottom')+
  coord_sf(xlim = c(3,9), ylim = c(53,56))
```

To select different palettes explore [ggplot2 book](https://ggplot2-book.org/scales-colour). Here are some of the palette options.

```{r, echo=FALSE, out.width = "80%", eval=FALSE}
knitr::include_graphics("https://github.com/MiriamLL/data_supporting_webpage/blob/main/Blog/2025/SST/color_palettes.png?raw=true")
```

To change the color palette use **scale_fill_distiller**.

```{r, fig.width=6, eval=FALSE}
ggplot() +
  geom_raster(data = SST_sub , aes(x = x, y = y, fill = SST)) +
  scale_fill_distiller(palette = "YlOrBr")+
  theme_void()+
  theme(legend.position='bottom')+
  xlab('Longitude')+ylab('Latitude')+
  coord_sf(xlim = c(3,9), ylim = c(53,56),
                    label_axes = list(top = "E", left = "N", bottom = 'E', right='N'))

```

Add land shapefiles to complete the map. To add shapefiles load the package **sf**.

```{r, eval=FALSE}
library(sf)
```

Use the function **st_transform** to convert to the same CRS.\
For the exercise, use the shapefiles from the package **GermanNorthSea**

```{r, eval=FALSE}
German_land<-st_transform(GermanNorthSea::German_land, 4326)
```

Add the land to the plot using **geom_sf**.

```{r, fig.width=6, eval=FALSE}
Plot_sst<-ggplot() +
  geom_tile(data = SST_sub , aes(x = x, y = y, fill = SST)) +
  scale_fill_distiller(name="Sea surface temperature (°C) \nFrom 0 to 60 m depth\n(April and May montly composites)",
                       palette = "Spectral")+
  geom_sf(data = German_land, colour = 'black', fill = '#d5bdaf')+
  coord_sf(xlim = c(3,9), ylim = c(53,56),
                    label_axes = list(top = "E", left = "N", bottom = 'E', right='N'))+
  theme_void()
Plot_sst
```

Change a little bit the design using arguments in the **theme**.

```{r, eval=FALSE}
Plot_sst +
  theme_void()+
  xlab('Longitude')+ylab('Latitude')+
  theme(legend.background = element_rect(colour = "transparent", fill = "transparent"),
        legend.position = c(0.40,0.30),
        panel.background = element_rect(fill = '#edede9'),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        panel.border = element_rect(colour = "black", fill=NA, size=1.5))+
  NULL
```

```{r, echo=FALSE, eval=FALSE}
ggsave(Plot_sst +
  theme_void()+
  xlab('Longitude')+ylab('Latitude')+
  theme(legend.background = element_rect(colour = "transparent", fill = "transparent"),
        legend.position = c(0.40,0.30),
        panel.background = element_rect(fill = '#edede9'),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        panel.border = element_rect(colour = "black", fill=NA, size=1.5))+
  NULL,
       filename = paste0(this_folder,"/sst_GermanNorthSea.jpg"),
       width = 4, 
       height = 4, 
       units = "in",
       dpi = 300)
```

```{r, echo=FALSE, out.width = "80%"}
knitr::include_graphics(paste0(here::here(),"/blog/2025-04-15-copernicus-sst/sst_export.jpg"))
```

# Further reading

-   [Examples from Copernicus](https://marine.copernicus.eu/services/user-learning-services/using-r-work-copernicus-marine-data)
-   [How to download Copernicus marine products](https://help.marine.copernicus.eu/en/articles/4469993-how-to-download-copernicus-marine-products#h_ec9344c750)
-   [Video Tutorials from Copernicus](https://events.marine.copernicus.eu/dataviz-webinar-series/content/replays-presentations?iw_mailid=97e89e1f-a0f9-ef11-90cb-6045bdf3a630&iw_scope=Event)
-   Comparing with other studies palettes: [SST in the German North Sea from 2004](https://www.researchgate.net/publication/222406095_Defining_habitats_suitable_for_larval_fish_in_the_German_Bight_southern_North_Sea_An_IBM_approach_using_spatially-_and_temporally-resolved_size-structured_prey_fields)
-   [Package GermanNorthSea](https://github.com/MiriamLL/GermanNorthSea)
-   [Package terra](https://rspatial.github.io/terra/)
-   [Package sf](https://r-spatial.github.io/sf/)
