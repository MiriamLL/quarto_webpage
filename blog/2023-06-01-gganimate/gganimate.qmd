---
title: "gganimate"
description: |
  Create an animation of your tracks.
author:
  - name: Miriam Lerma
    url: {}
image: gganimate_front.jpg
date: 2023-06-01
categories:
  - R
  - ggplot2
  - Y2023
  - biologging
format:
  html:
    toc: true
    toc-depth: 2
    toc-location: left
---


# Intro

How to create a map an animation using gganimate

## Getting ready

Load and/or install the following packages:

```{r, eval=FALSE}
library(here)
library(tidyverse)
```

## Load data

```{r, eval=FALSE}
library(sula)
```

```{r, eval=FALSE}
Example<-GPS_01
```


## Mark beggining

Mark a day zero to begging the animation, and the sequence to use

```{r, eval=FALSE}
first(Example$DateGMT)
```

```{r, eval=FALSE}
Example$date_diff <- as.Date(as.character(Example$tStamp), 
                             format="%Y-%m-%d")-
  as.Date(as.character('2017-11-02'), 
          format="%Y-%m-%d")
```

Create number sequence for animation

```{r, echo=TRUE, eval=FALSE}
Example<-Example %>% 
  group_by(IDs) %>%
  mutate(Secuencia = row_number())
```

## Create map for reference

For creating maps, the package **sf** is to be called.

```{r, eval=FALSE}
library(sf)
```

Now load your data, here I am giving my directory, you should use the one on your computer.

To dowload the shapefile from Chile you can use this [this link](https://github.com/MiriamLL/miriamlerma_/blob/main/_posts/2023-06-01-gganimate/CHL_adm1.shp), this shapefile comes from the [DIVA-GIS](https://www.diva-gis.org/datadown)

```{r echo=FALSE,warning=FALSE, eval=FALSE}
Directory<-here('_posts/2023-06-01-gganimate')
MyShapefileName<-"/CHL_adm1.shp"
```

```{r, message=FALSE, eval=FALSE}
Country<-st_read(paste0(Directory,MyShapefileName))
```

## Plot

Plot the area of interest

```{r, fig.height=5, fig.width=5, eval=FALSE}
My_map<-ggplot(data=Example)  + 
  geom_sf(data = Country,colour = "#edf2f4", fill = "#2b2d42",)+
  geom_point(data=Example,aes(x = Longitude, y=Latitude))+
  geom_path(data=Example,aes(x = Longitude, y=Latitude))+
  coord_sf(xlim = c(-110,-109), ylim = c(-27.5,-26.5))
My_map
```

## Modify map to taste

```{r, fig.height=5, fig.width=5, eval=FALSE}
My_map<-My_map+
 theme_bw()+

  theme(
    panel.grid.major = element_blank(), 
    panel.grid.minor = element_blank(),
    panel.background = element_rect(fill = '#edf2f4'),
    
    axis.text.x =  element_text(size=12,color = "black"),
    axis.text.y =  element_text(size=12,color = "black"),
    
    axis.ticks.x = element_line(color = "black"),
    axis.ticks.y = element_line(color = "black"),
    
    title = element_text(colour = "black"),
    legend.position = "none")+
  
    scale_x_continuous(labels = function(x) paste0(x, '\u00B0', "W")) +
    scale_y_continuous(labels = function(x) paste0(x, '\u00B0', "N"))
My_map
```

## Animate

To animate this plot, we will use the package **gganimate**

```{r, warning=FALSE, eval=FALSE}
library(gganimate)
```

Because animations might take some time, I like to use the package **beepr** to let me know when the animation is ready

```{r, eval=FALSE}
library(beepr)
```

**transition_reveal** leaves the track on the back ground so you can keep record where it was  

```{r animating, fig.height=8, fig.width=8, eval=FALSE}
My_animation<-ggplot(data=Example)  + 
  geom_sf(data = Country,colour = "#edf2f4", fill = "#2b2d42",)+
  geom_point(data=Example,aes(x = Longitude, y=Latitude, colour = tStamp))+
  geom_path(data=Example,aes(x = Longitude, y=Latitude))+
  coord_sf(xlim = c(-110,-109), ylim = c(-27.5,-26.5))+
  
  theme_bw()+

  theme(
    panel.grid.major = element_blank(), 
    panel.grid.minor = element_blank(),
    panel.background = element_rect(fill = '#edf2f4'),
    
    axis.text.x =  element_text(size=12,color = "black"),
    axis.text.y =  element_text(size=12,color = "black"),
    
    axis.ticks.x = element_line(color = "black"),
    axis.ticks.y = element_line(color = "black"),
    
    title = element_text(colour = "black"),
    legend.position = "none")+
  
    scale_x_continuous(labels = function(x) paste0(x, '\u00B0', "W")) +
    scale_y_continuous(labels = function(x) paste0(x, '\u00B0', "N")) +
  
  transition_reveal(along=tStamp) +
  shadow_trail(distance = 0.01,
               alpha = 0.5,
               shape = 1)
My_animation
```

```{r, echo=FALSE, out.height=350, eval=FALSE}
knitr::include_graphics('https://raw.githubusercontent.com/MiriamLL/miriamlerma_/refs/heads/main/_posts/2023-06-01-gganimate/animation.gif')
```

Other arguments are:  
**transition_time** use the information for the transition is
**labs** shows the title with time so you can use as a reference  
**shadow_wake** is the wake behind the points [read more here](https://goodekat.github.io/presentations/2019-isugg-gganimate-spooky/slides.html#48)

## Export

The package **animation** allows to save the animation as a file

```{r, eval=FALSE}
library(animation)
```

To export, you can save the animation as gif

```{r include= TRUE, eval=FALSE}
anim_save("animation.gif",My_animation)
beep(sound=1,expr=NULL)
```

Or transform from gif to mp4 using the package **av**

```{r, eval=FALSE}
library(av)
```

```{r include= TRUE, eval=FALSE}
av::av_encode_video("animation.gif", 
                     framerate = 5 ,
                     output = 'animation.mp4')
beep(sound=1,expr=NULL)
```

```{r, echo=FALSE, fig.align='left'}
knitr::include_graphics("https://github.com/MiriamLL/data_supporting_webpage/blob/main/Blog/2023/animation.gif?raw=true")
```

# Further reading

- [A Grammar of Animated Graphics](https://gganimate.com/)
- [Step by step with Katherine Goode](https://goodekat.github.io/presentations/2019-isugg-gganimate-spooky/slides.html#1)  
- [Step by step with Ander Fernandez](https://anderfernandez.com/en/blog/how-to-create-animations-in-r-with-gganimate/)  
- [Migration animated](https://www.climatecentral.org/news/map-animal-migration-climate-change-20646)

